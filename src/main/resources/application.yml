spring:
  application.name: practical-java
  jackson:
    property-naming-strategy: SNAKE_CASE

#%d{HH:mm:ss.SSS} → Log time (hour:minute:second.millisecond)
#%5p → Log level (INFO, DEBUG, ERROR...)
#%logger{39} → Logger class name (up to 39 characters)
#%m → Log message
#%wEx → If an exception occurred, print it
#clr(...) → To color the text in the console

logging:
  pattern:
    console: "[Practical Java] %clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(---){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
    file:  "[Practical Java] %clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(---){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
  file:
    name: log/practical-java.log

# The configuration is for Micrometer and its purpose is to send Spring Boot Actuator metrics data to an Elasticsearch server every 30 seconds. However, there is a critical flaw in your configuration.
# It tells Spring Boot to use Micrometer to send metrics to Elasticsearch.

management:
  metrics:
    export:
      elastic:
        enabled: true
        host: http://192.168.8.226:9200
  health:
    elasticsearch:
      enabled: false


